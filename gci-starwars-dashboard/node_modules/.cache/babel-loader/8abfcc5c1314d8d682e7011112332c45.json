{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryPerson(page: \", \"){\\n            count\\n            next\\n            results{\\n                name\\n                gender\\n                skin_color\\n                birth_year\\n                eye_color\\n\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport { Grid } from '@material-ui/core';\n\nconst styles = theme => ({\n  poster: {\n    width: '100%',\n    height: '300px'\n  },\n  home: {\n    margin: '40px',\n    paddingTop: '100px'\n  },\n  title: {\n    padding: '15px',\n    color: '#FFE81F',\n    borderRadius: '10px',\n    backgroundColor: 'black',\n    textAlign: 'center'\n  }\n});\n\nconst getPerson = pageNo => {\n  const all = gql(_templateObject(), pageNo);\n  return all;\n};\n\nconsole.log(getPerson(1).getEveryPerson);\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setPageNumber = pageNo => {\n      this.setState({\n        People: {\n          currentPage: pageNo\n        }\n      });\n    };\n\n    this.state = {\n      People: {\n        currentPage: null,\n        count: null,\n        people: null,\n        per_page: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setPageNumber(1);\n  }\n\n  render() {\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.People,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"CHARACTERS\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Query, {\n      query: getPerson(this.state.People.currentPage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Loading ....\");\n      if (error) console.log(error);\n      console.log(data.getEveryPerson.results);\n      return React.createElement(Person, {\n        people: data.getEveryPerson.results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js"],"names":["React","Component","gql","Query","PropTypes","withStyles","poster","Person","Grid","styles","theme","width","height","home","margin","paddingTop","title","padding","color","borderRadius","backgroundColor","textAlign","getPerson","pageNo","all","console","log","getEveryPerson","Home","constructor","props","setPageNumber","setState","People","currentPage","state","count","people","per_page","componentDidMount","render","classes","loading","error","data","results","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport { Grid } from '@material-ui/core';\n\nconst styles = theme=> ({\n    \n    poster:{\n        width: '100%',\n        height: '300px'\n    },\n    home:{\n        margin: '40px',\n        paddingTop: '100px',\n    },\n    title:{\n        \n        padding: '15px',\n        color: '#FFE81F',\n        borderRadius: '10px',\n        backgroundColor: 'black',\n        textAlign: 'center'\n    }\n})\n\nconst getPerson = (pageNo) =>{\n    \n    const all = gql`\n    query{\n        \n        getEveryPerson(page: ${pageNo}){\n            count\n            next\n            results{\n                name\n                gender\n                skin_color\n                birth_year\n                eye_color\n\n            }\n        }\n    }\n    `;\n\n    return all;\n    \n}\nconsole.log(getPerson(1).getEveryPerson);\n\nexport class Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            People: {\n                currentPage: null,\n                count: null,\n                people: null,\n                per_page: null,\n            }\n            \n        }\n    }\n\n    setPageNumber = pageNo =>{\n        this.setState({\n            People:{\n                currentPage: pageNo\n            }\n        })\n    }\n\n    componentDidMount(){\n        this.setPageNumber(1);\n    }\n\n    render() {\n\n        let { classes } = this.props;\n\n        return (\n\n            \n            <div className={classes.home}>\n            \n                <div className={classes.People}>\n\n                    <h1 className={classes.title}>CHARACTERS</h1>\n                    <Grid container>\n\n                        <Query query={getPerson(this.state.People.currentPage)}>\n                        {\n                            ({loading,error,data}) =>{\n                                if(loading) return <h2>Loading ....</h2>\n                                if(error) console.log(error)\n                                console.log(data.getEveryPerson.results)\n\n                                return <Person people={data.getEveryPerson.results} />\n\n                            }                            \n                        }\n                    </Query>\n                    </Grid>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}