{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/swapi/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/swapi/client/src/components/main.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        getPerson(id: 1){\\n            name\\n            films{\\n                title\\n            }\\n\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nconst mainQ = gql(_templateObject());\nexport class Main extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"hello\"), React.createElement(Query, {\n      query: mainQ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"loading...\");\n      if (error) console.log(error);\n      console.log(data.films);\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"sayam1\");\n    }));\n  }\n\n}\nexport default Main;","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/swapi/client/src/components/main.js"],"names":["React","Component","gql","Query","mainQ","Main","render","loading","error","data","console","log","films"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAGA,MAAMC,KAAK,GAAGF,GAAH,mBAAX;AAWA,OAAO,MAAMG,IAAN,SAAmBJ,SAAnB,CAA6B;AAChCK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC;AAACG,MAAAA,OAAD;AAASC,MAAAA,KAAT;AAAeC,MAAAA;AAAf,KAAD,KAA0B;AACtB,UAAGF,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACZ,UAAGC,KAAH,EAAUE,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,KAPT,CAFJ,CADJ;AAeH;;AAjB+B;AAoBpC,eAAeP,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\n\nconst mainQ = gql`\n    query{\n        getPerson(id: 1){\n            name\n            films{\n                title\n            }\n\n        }\n    }\n`;\nexport class Main extends Component {\n    render() {\n        return (\n            <div>\n                <h1>hello</h1>\n                <Query query={mainQ}>\n                    {\n                        ({loading,error,data}) => {\n                            if(loading) return <h1>loading...</h1>\n                            if(error) console.log(error);\n                            console.log(data.films);\n                            return <h1>sayam1</h1>\n                        }\n                    }\n                </Query>\n            </div>\n        )\n    }\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}