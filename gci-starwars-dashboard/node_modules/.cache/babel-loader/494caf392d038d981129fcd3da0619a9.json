{"ast":null,"code":"var _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Person.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = theme => ({\n  card: {\n    margin: '10px',\n    color: '#FFE81F',\n    backgroundColor: 'black'\n  },\n  name: {\n    borderBottom: '2px white'\n  },\n  root: {\n    color: '#FFE81F'\n  },\n  table: {\n    backgroundColor: 'white',\n    color: 'grey'\n  },\n  loading: {\n    align: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  tableHead: {\n    padding: '20x',\n    backgroundColor: 'white'\n  },\n  thead: {\n    fontSize: '20px',\n    color: 'black'\n  },\n  tcell: {\n    \"&:hover\": {\n      color: '#FFE81F'\n    },\n    fontSize: '18px',\n    color: 'grey'\n  },\n  row: {\n    \"&:hover\": {\n      boxShadow: '10px 10px 10px'\n    }\n  }\n});\n\nexport class Person extends Component {\n  render() {\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      className: classes.tableHead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: classes.thead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Birth Year\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Mass\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Eye color\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Skin Color\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Hair Color\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Films\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, (() => {\n      if (this.props.people == null) {\n        return React.createElement(\"div\", {\n          className: classes.loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(LinearProgress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }));\n      } else {\n        return this.props.people.map(person => React.createElement(TableRow, {\n          row: person.name,\n          className: classes.row,\n          key: person.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: classes.tcell,\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, person.name), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, person.gender), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, person.birth_year), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, person.mass), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, person.eye_color), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, person.skin_color), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, person.hair_color), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, person.films.map(film => React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, film.title, \",\"))))));\n      }\n    })()))));\n  }\n\n}\nPerson.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Person);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Person.js"],"names":["React","Component","PropTypes","withStyles","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","LinearProgress","styles","theme","card","margin","color","backgroundColor","name","borderBottom","root","table","loading","align","alignItems","textAlign","width","marginTop","spacing","tableHead","padding","thead","fontSize","tcell","row","boxShadow","Person","render","classes","props","people","map","person","gender","birth_year","mass","eye_color","skin_color","hair_color","films","film","title","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = theme=> ({\n    card:{\n        margin: '10px',\n        color: '#FFE81F',\n        backgroundColor: 'black'\n    },\n    name:{\n\n        borderBottom: '2px white'\n    },\n    root:{\n        color: '#FFE81F'\n    },\n    table:{\n        \n        backgroundColor:'white',\n        color: 'grey'\n    },\n    loading:{\n        align: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n          },\n        \n    },\n    tableHead:{\n        padding: '20x',\n        backgroundColor: 'white'\n    },\n    thead: {\n        fontSize: '20px',\n        \n        color:'black'\n    },\n    tcell: {\n        \"&:hover\":{\n            color: '#FFE81F'\n        },\n        fontSize: '18px',\n        \n        color: 'grey'\n    },\n    row:{\n        \"&:hover\":{\n            boxShadow: '10px 10px 10px',\n        },\n    }\n\n});\n\n\nexport class Person extends Component {\n\n    \n    render() {\n\n        let { classes } = this.props;\n        \n        return (\n            <div>\n        \n                <Paper className={classes.root}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                            \n                    <TableHead className={classes.tableHead}>\n                        <TableRow style={{color:'white'}}>\n                            <TableCell className={classes.thead}>Name</TableCell>\n                            <TableCell className={classes.thead} align=\"right\">Gender</TableCell>\n                            <TableCell className={classes.thead} align=\"right\">Birth Year</TableCell>\n                            <TableCell className={classes.thead} align=\"right\">Mass</TableCell>\n                            <TableCell className={classes.thead} align=\"right\">Eye color</TableCell>\n                            <TableCell className={classes.thead} align=\"right\">Skin Color</TableCell>\n                            <TableCell className={classes.thead} align=\"right\">Hair Color</TableCell>             \n                            <TableCell className={classes.thead} align=\"right\">Films</TableCell>     \n                        </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                        {(() => {\n                            if(this.props.people == null){\n                                return (\n                                    <div className={classes.loading}>\n                                        <LinearProgress />\n                                    </div>\n                                )\n                                }else{\n                                return(\n                                this.props.people.map(person => (\n                                    <TableRow row={person.name} className={classes.row} key={person.name}>\n                                        <TableCell className={classes.tcell} component=\"th\" scope=\"row\">{person.name}</TableCell>\n                                        <TableCell className={classes.tcell} align=\"right\">{person.gender}</TableCell>\n                                        <TableCell className={classes.tcell} align=\"right\">{person.birth_year}</TableCell>\n                                        <TableCell className={classes.tcell} align=\"right\">{person.mass}</TableCell>\n                                        <TableCell className={classes.tcell} align=\"right\">{person.eye_color}</TableCell>\n                                        <TableCell className={classes.tcell} align=\"right\">{person.skin_color}</TableCell>\n                                        <TableCell className={classes.tcell} align=\"right\">{person.hair_color}</TableCell>\n\n                                        <TableCell className={classes.tcell} align=\"right\">\n                                            <p>\n                                            {person.films.map(film => (\n                                                    <Typography>{film.title},</Typography>\n                                            ))}\n                                            </p>\n                                        </TableCell>\n\n                                    </TableRow>\n                                ))\n                            )\n                            }\n                        })()}\n                    </TableBody>\n\n                </Table>\n                </Paper>\n            \n            </div>\n        )\n    }\n}\n\nPerson.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Person);"]},"metadata":{},"sourceType":"module"}