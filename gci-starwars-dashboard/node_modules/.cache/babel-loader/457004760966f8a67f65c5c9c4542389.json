{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryVehicle(page: \", \"){\\n\\n            results{\\n                cargo_capacity\\n                cost_in_credits\\n                created\\n                crew\\n                model\\n                name\\n            }\\n        }\\n\\n        \\n    }\\n    \"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryPlanet(page: \", \"){\\n\\n            results{\\n                name\\n                population\\n                gravity\\n                climate\\n                created\\n            }\\n        }\\n\\n        \\n    }\\n    \"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        getEveryFilm{\\n            count\\n            results{\\n                episode_id\\n                title\\n                director\\n                release_date\\n                created\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryPerson(page: \", \"){\\n\\n            results{\\n                name\\n                gender\\n                skin_color\\n                birth_year\\n                eye_color\\n\\n            }\\n        }\\n\\n        \\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport Film from './Film.js';\nimport Planet from './Planet';\nimport Vehicle from './Vehicle';\nimport { Grid } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql'\n});\n\nconst getPerson = pageNo => {\n  const all = gql(_templateObject(), pageNo);\n  return all;\n};\n\nconst getFilm = () => {\n  const all = gql(_templateObject2());\n  return all;\n};\n\nconst getPlanet = pageNo => {\n  const all = gql(_templateObject3(), pageNo);\n  return all;\n};\n\nconst getVehicle = pageNo => {\n  const all = gql(_templateObject4(), pageNo);\n  return all;\n};\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.QueryPeople = async pageNo => {\n      await client.query({\n        query: getPerson(pageNo)\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          people: data.getEveryPerson.results\n        });\n      });\n    };\n\n    this.QueryFilm = async () => {\n      await client.query({\n        query: getFilm()\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          film: data.getEveryFilm.results\n        });\n      });\n    };\n\n    this.QueryPlanet = async pageNo => {\n      await client.query({\n        query: getPlanet(pageNo)\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          planet: data.getEveryPlanet.results\n        });\n      });\n    };\n\n    this.QueryVehicle = async pageNo => {\n      await client.query({\n        query: getVehicle(pageNo)\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          Vehicle: data.getEveryVehicle.results\n        });\n      });\n    };\n\n    this.state = {\n      people: null,\n      film: null,\n      planet: null,\n      Vehicle: null,\n      StarShip: null,\n      Species: null\n    };\n  }\n\n  async setData(point, pageNo) {\n    if (point == 'person') {\n      await this.QueryPeople(pageNo);\n    }\n\n    if (point == 'planet') {\n      await this.QueryPlanet(pageNo);\n    }\n\n    if (point == 'vehicle') {\n      await this.QueryVehicle(pageNo);\n    }\n  }\n\n  async componentDidMount() {\n    await this.setData('person', 1);\n    await this.setData('planet', 1);\n    await this.setData('vehicle', 1);\n    await this.QueryFilm();\n  }\n\n  render() {\n    const number = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"CHARACTERS\"), React.createElement(Person, {\n      people: this.state.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"4\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"5\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"6\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"7\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 8),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"8\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 9),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"9\")))), React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Films\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Film, {\n      film: this.state.film,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"PLANETS\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Planet, {\n      planet: this.state.planet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"4\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"5\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"6\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"7\"))))), React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Vehicles\"), React.createElement(Vehicle, {\n      vehicle: this.state.Vehicle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"4\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"5\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"6\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"7\"))))));\n  }\n\n}\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst styles = theme => ({\n  poster: {\n    width: '100%',\n    height: '300px'\n  },\n  home: {\n    margin: '40px',\n    paddingTop: '100px'\n  },\n  people: {\n    padding: '50px'\n  },\n  title: {\n    padding: '15px',\n    color: '#FFE81F',\n    backgroundColor: 'black',\n    textAlign: 'center'\n  },\n  card: {\n    margin: '10px',\n    color: '#FFE81F',\n    backgroundColor: 'black'\n  },\n  name: {\n    borderBottom: '2px white'\n  }\n});\n\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js"],"names":["React","Component","gql","Query","useQuery","PropTypes","withStyles","poster","Person","Film","Planet","Vehicle","Grid","useEffect","ApolloClient","ApolloProvider","Card","CardActionArea","CardActions","CardContent","Button","Typography","List","ListItem","ListItemText","client","uri","getPerson","pageNo","all","getFilm","getPlanet","getVehicle","Home","constructor","props","QueryPeople","query","then","result","data","setState","people","getEveryPerson","results","QueryFilm","film","getEveryFilm","QueryPlanet","planet","getEveryPlanet","QueryVehicle","getEveryVehicle","state","StarShip","Species","setData","point","componentDidMount","render","number","classes","home","title","propTypes","object","isRequired","styles","theme","width","height","margin","paddingTop","padding","color","backgroundColor","textAlign","card","name","borderBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport Film from './Film.js';\nimport Planet from './Planet';\nimport Vehicle from './Vehicle';\nimport { Grid } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:4000/graphql',\n  });\n\nconst getPerson = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryPerson(page: ${pageNo}){\n\n            results{\n                name\n                gender\n                skin_color\n                birth_year\n                eye_color\n\n            }\n        }\n\n        \n    }\n    `;\n\n    return all;\n    \n}\n\nconst getFilm = () =>{\n\n    const all = gql`\n    query{\n        getEveryFilm{\n            count\n            results{\n                episode_id\n                title\n                director\n                release_date\n                created\n            }\n        }\n    }\n    `;\n    return all;\n}\n\nconst getPlanet = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryPlanet(page: ${pageNo}){\n\n            results{\n                name\n                population\n                gravity\n                climate\n                created\n            }\n        }\n\n        \n    }\n    `;\n\n    return all;\n    \n}\n\nconst getVehicle = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryVehicle(page: ${pageNo}){\n\n            results{\n                cargo_capacity\n                cost_in_credits\n                created\n                crew\n                model\n                name\n            }\n        }\n\n        \n    }\n    `;\n\n    return all;\n    \n}\n\n\nexport class Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            people: null,\n            film: null,\n            planet: null,\n            Vehicle: null,\n            StarShip: null,\n            Species: null,       \n        }\n    }\n\n    QueryPeople = async pageNo =>{\n        await client.query({\n                    query: getPerson(pageNo)\n                        })\n                        .then(result => {\n                            const data = result.data   \n                            this.setState({\n                                people: data.getEveryPerson.results\n                                })\n                                    \n                        });\n    }\n\n    QueryFilm = async () =>{\n        await client.query({\n                    query: getFilm()\n                            })\n                            .then(result => {\n                                 const data = result.data\n                                this.setState({\n                                    film: data.getEveryFilm.results\n                                })\n                            });\n    }\n\n    QueryPlanet = async pageNo =>{\n        await client.query({\n                    query: getPlanet(pageNo)\n                            })\n                            .then(result => {\n                                const data = result.data  \n                                this.setState({\n                                    planet: data.getEveryPlanet.results\n                                })\n                                    \n                            });\n    }\n\n    QueryVehicle = async pageNo =>{\n        await client.query({\n                    query: getVehicle(pageNo)\n                            })\n                            .then(result => {\n                                const data = result.data  \n                                this.setState({\n                                    Vehicle: data.getEveryVehicle.results\n                                })\n                                    \n                            });\n    }\n\n    async setData(point,pageNo){\n        if(point == 'person'){\n            await this.QueryPeople(pageNo);\n        }\n        if(point == 'planet'){\n            await this.QueryPlanet(pageNo);\n        }\n        if(point == 'vehicle'){\n            await this.QueryVehicle(pageNo);\n        }\n    \n        \n    }\n    async componentDidMount(){\n        await this.setData('person',1);\n        await this.setData('planet',1);\n        await this.setData('vehicle',1);\n        await this.QueryFilm();\n        \n    }\n    \n    render() {\n\n        const number = [1,2,3,4,5,6,7,8,9];\n        let { classes } = this.props;\n\n        return (\n\n            \n            <div className={classes.home}>\n            <ApolloProvider client={client}>\n                <div className={classes.people}>\n\n                    <h1 className={classes.title}>CHARACTERS</h1>\n                    \n                        <Person people={this.state.people} />\n                        <ul>\n                            <li><Button onClick={() => this.setData('person',1)}>1</Button></li>\n                            <li><Button onClick={() => this.setData('person',2)}>2</Button></li>\n                            <li><Button onClick={() => this.setData('person',3)}>3</Button></li>\n                            <li><Button onClick={() => this.setData('person',4)}>4</Button></li>\n                            <li><Button onClick={() => this.setData('person',5)}>5</Button></li>\n                            <li><Button onClick={() => this.setData('person',6)}>6</Button></li>\n                            <li><Button onClick={() => this.setData('person',7)}>7</Button></li>\n                            <li><Button onClick={() => this.setData('person',8)}>8</Button></li>\n                            <li><Button onClick={() => this.setData('person',9)}>9</Button></li>\n                        </ul>\n\n                </div>\n\n                <div className={classes.people}>\n                    <h1 className={classes.title}>Films</h1>\n\n                    <Grid container>\n                        <Film film={this.state.film} />\n                    </Grid>\n                </div>\n\n                <div className={classes.people}>\n\n                    <h1 className={classes.title}>PLANETS</h1>\n                    <Grid container>\n                        <Planet planet={this.state.planet} />\n                        <ul>\n                            <li><Button onClick={() => this.setData('planet',1)}>1</Button></li>\n                            <li><Button onClick={() => this.setData('planet',2)}>2</Button></li>\n                            <li><Button onClick={() => this.setData('planet',3)}>3</Button></li>\n                            <li><Button onClick={() => this.setData('planet',4)}>4</Button></li>\n                            <li><Button onClick={() => this.setData('planet',5)}>5</Button></li>\n                            <li><Button onClick={() => this.setData('planet',6)}>6</Button></li>\n                            <li><Button onClick={() => this.setData('planet',7)}>7</Button></li>\n                        </ul>\n                        \n                    </Grid>\n\n                </div>\n\n                <div className={classes.people}>\n\n                    <h1 className={classes.title}>Vehicles</h1>\n                    \n                        <Vehicle vehicle={this.state.Vehicle} />\n                        <ul>\n                            <li><Button onClick={() => this.setData('vehicle',1)}>1</Button></li>\n                            <li><Button onClick={() => this.setData('vehicle',2)}>2</Button></li>\n                            <li><Button onClick={() => this.setData('vehicle',3)}>3</Button></li>\n                            <li><Button onClick={() => this.setData('vehicle',4)}>4</Button></li>\n                            <li><Button onClick={() => this.setData('vehicle',5)}>5</Button></li>\n                            <li><Button onClick={() => this.setData('vehicle',6)}>6</Button></li>\n                            <li><Button onClick={() => this.setData('vehicle',7)}>7</Button></li>\n                        </ul>\n\n                </div>\n                </ApolloProvider>\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme=> ({\n    \n    poster:{\n        width: '100%',\n        height: '300px'\n    },\n    home:{\n        margin: '40px',\n        paddingTop: '100px',\n    },\n    people:{\n        padding: '50px',\n    },\n    title:{\n        \n        padding: '15px',\n        color: '#FFE81F',\n        \n        backgroundColor: 'black',\n        textAlign: 'center'\n    },\n    card:{\n        margin: '10px',\n        color: '#FFE81F',\n        backgroundColor: 'black'\n    },\n    name:{\n\n        borderBottom: '2px white'\n    }\n})\n\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}