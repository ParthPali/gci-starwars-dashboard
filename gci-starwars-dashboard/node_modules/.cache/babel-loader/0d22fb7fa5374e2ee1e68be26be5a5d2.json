{"ast":null,"code":"var _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Film.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n  card: {\n    margin: '10px',\n    color: '#FFE81F',\n    backgroundColor: 'black'\n  },\n  name: {\n    borderBottom: '2px white'\n  },\n  root: {\n    color: '#FFE81F'\n  },\n  table: {\n    boxShadow: '20px 20px 20px',\n    backgroundColor: 'white',\n    color: 'grey'\n  },\n  loading: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n  tableHead: {\n    padding: '20x',\n    backgroundColor: 'white'\n  },\n  thead: {\n    fontSize: '20px',\n    textAlign: 'center',\n    color: 'black'\n  },\n  tcell: {\n    fontSize: '18px',\n    textAlign: 'center',\n    color: 'grey'\n  }\n});\n\nexport class Person extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      className: classes.tableHead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: classes.thead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Title\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Director\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Release Date\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Created\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"More Details\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, (() => {\n      if (this.props.film == null) {\n        return React.createElement(\"h1\", {\n          className: classes.loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Loading\");\n      } else {\n        return this.props.film.map(film => React.createElement(TableRow, {\n          row: film.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, film.title), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, film.director), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, film.release_date), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, film.created), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Know More\"))));\n      }\n    })()))));\n  }\n\n}\nPerson.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Person);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Film.js"],"names":["React","Component","PropTypes","withStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","Grid","List","ListItem","ListItemText","Table","TableBody","TableCell","TableHead","TableRow","Paper","styles","theme","card","margin","color","backgroundColor","name","borderBottom","root","table","boxShadow","loading","flexGrow","textAlign","tableHead","padding","thead","fontSize","tcell","Person","constructor","props","render","classes","film","map","title","director","release_date","created","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme=> ({\n    card:{\n        margin: '10px',\n        color: '#FFE81F',\n        backgroundColor: 'black'\n    },\n    name:{\n\n        borderBottom: '2px white'\n    },\n    root:{\n        color: '#FFE81F'\n    },\n    table:{\n        boxShadow: '20px 20px 20px',\n        backgroundColor:'white',\n        color: 'grey'\n    },\n    loading:{\n        flexGrow: 1,\n        textAlign:\"center\",\n        \n    },\n    tableHead:{\n        padding: '20x',\n        backgroundColor: 'white'\n    },\n    thead: {\n        fontSize: '20px',\n        textAlign:'center',\n        color:'black'\n    },\n    tcell: {\n        fontSize: '18px',\n        textAlign: 'center',\n        color: 'grey'\n    }\n\n});\n\n\nexport class Person extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n\n        let { classes } = this.props;\n        \n        return (\n            <div>\n        \n                        <Paper className={classes.root}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                            \n                                <TableHead className={classes.tableHead}>\n                                    <TableRow style={{color:'white'}}>\n                                    \n                                        <TableCell className={classes.thead}>Title</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Director</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Release Date</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Created</TableCell>\n                                        \n                                        <TableCell className={classes.thead} align=\"right\">More Details</TableCell>\n                                    </TableRow>\n                                </TableHead>\n\n                                <TableBody>\n                                    {(() => {\n                                        if(this.props.film == null){\n                                            return (\n                                                <h1 className={classes.loading}>Loading</h1>\n                                            )\n                                        }else{\n                                            return(\n                                                this.props.film.map(film => (\n                                                <TableRow row={film.title}>\n                                                    \n                                                    <TableCell className={classes.tcell} align=\"right\">{film.title}</TableCell>\n                                                    <TableCell className={classes.tcell} align=\"right\">{film.director}</TableCell>\n                                                    <TableCell className={classes.tcell} align=\"right\">{film.release_date}</TableCell>\n                                                    <TableCell className={classes.tcell} align=\"right\">{film.created}</TableCell>\n                                                    <TableCell className={classes.tcell} align=\"right\"><Button>Know More</Button></TableCell>\n                                                </TableRow>\n                                                ))\n                                                )\n                                                }\n                                            })()}\n                                </TableBody>\n\n                            </Table>\n                        </Paper>\n            \n            </div>\n        )\n    }\n}\n\nPerson.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Person);"]},"metadata":{},"sourceType":"module"}