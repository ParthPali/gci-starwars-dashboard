{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryPerson(page: \", \"){\\n            count\\n            next\\n            results{\\n                name\\n                gender\\n                skin_color\\n                birth_year\\n                eye_color\\n\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport { Grid } from '@material-ui/core';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Pagination from \"material-ui-flat-pagination\";\nconst theme1 = createMuiTheme();\n\nconst styles = theme => ({\n  poster: {\n    width: '100%',\n    height: '300px'\n  },\n  home: {\n    margin: '40px',\n    paddingTop: '100px'\n  },\n  title: {\n    padding: '15px',\n    color: '#FFE81F',\n    borderRadius: '10px',\n    backgroundColor: 'black',\n    textAlign: 'center'\n  }\n});\n\nconst getPerson = pageNo => {\n  const all = gql(_templateObject(), pageNo);\n  return all;\n};\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setPageNumber = pageNo => {\n      this.setState({\n        People: {\n          currentPage: pageNo\n        }\n      });\n    };\n\n    this.state = {\n      offset: 0,\n      People: {\n        currentPage: null,\n        count: null,\n        people: null,\n        per_page: null\n      }\n    };\n  }\n\n  handleClick(offset, pageNo) {\n    this.setState({\n      offset,\n      currentPage: pageNo\n    });\n  }\n\n  componentDidMount() {\n    this.setPageNumber(1);\n  }\n\n  render() {\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.People,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"CHARACTERS\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Query, {\n      query: getPerson(this.state.People.currentPage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Loading ....\");\n      if (error) console.log(error);\n      console.log(data.getEveryPerson.results);\n      return React.createElement(Person, {\n        people: data.getEveryPerson.results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    })), React.createElement(MuiThemeProvider, {\n      theme: theme1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      limit: 10,\n      offset: this.state.offset,\n      total: 100,\n      onClick: (e, offset) => this.handleClick(offset),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))));\n  }\n\n}\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js"],"names":["React","Component","gql","Query","PropTypes","withStyles","poster","Person","Grid","CssBaseline","createMuiTheme","MuiThemeProvider","Pagination","theme1","styles","theme","width","height","home","margin","paddingTop","title","padding","color","borderRadius","backgroundColor","textAlign","getPerson","pageNo","all","Home","constructor","props","setPageNumber","setState","People","currentPage","state","offset","count","people","per_page","handleClick","componentDidMount","render","classes","loading","error","data","console","log","getEveryPerson","results","e","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport { Grid } from '@material-ui/core';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Pagination from \"material-ui-flat-pagination\";\n \nconst theme1 = createMuiTheme();\n\nconst styles = theme=> ({\n    \n    poster:{\n        width: '100%',\n        height: '300px'\n    },\n    home:{\n        margin: '40px',\n        paddingTop: '100px',\n    },\n    title:{\n        \n        padding: '15px',\n        color: '#FFE81F',\n        borderRadius: '10px',\n        backgroundColor: 'black',\n        textAlign: 'center'\n    }\n})\n\nconst getPerson = (pageNo) =>{\n    \n    const all = gql`\n    query{\n        \n        getEveryPerson(page: ${pageNo}){\n            count\n            next\n            results{\n                name\n                gender\n                skin_color\n                birth_year\n                eye_color\n\n            }\n        }\n    }\n    `;\n\n    return all;\n    \n}\n\nexport class Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            offset: 0,\n\n            People: {\n                currentPage: null,\n                count: null,\n                people: null,\n                per_page: null,\n            }\n            \n        }\n    }\n    handleClick(offset,pageNo){\n        this.setState({\n            offset,\n            currentPage: pageNo\n        })\n    }\n    setPageNumber = pageNo =>{\n        this.setState({\n            People:{\n                currentPage: pageNo\n            }\n        })\n    }\n\n    componentDidMount(){\n        this.setPageNumber(1);\n    }\n\n    render() {\n\n        let { classes } = this.props;\n\n        return (\n\n            \n            <div className={classes.home}>\n            \n                <div className={classes.People}>\n\n                    <h1 className={classes.title}>CHARACTERS</h1>\n                    <Grid container>\n\n                        <Query query={getPerson(this.state.People.currentPage)}>\n                        {\n                            ({loading,error,data}) =>{\n                                if(loading) return <h2>Loading ....</h2>\n                                if(error) console.log(error)\n                                console.log(data.getEveryPerson.results)\n                                return <Person people={data.getEveryPerson.results} />\n\n                            }                            \n                        }\n                    </Query>\n                    </Grid>\n                    <MuiThemeProvider theme={theme1}>\n                        <CssBaseline />\n                        <Pagination\n                        limit={10}\n                        offset={this.state.offset}\n                        total={100}\n                        onClick={(e, offset) => this.handleClick(offset)}\n                        />\n                    </MuiThemeProvider>\n                </div>\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}