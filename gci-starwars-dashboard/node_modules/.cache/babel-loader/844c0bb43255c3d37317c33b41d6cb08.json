{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryPerson(page: \", \"){\\n            count\\n            next\\n            results{\\n                name\\n                gender\\n                skin_color\\n                birth_year\\n                eye_color\\n\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport { Grid } from '@material-ui/core';\n\nconst styles = theme => ({\n  poster: {\n    width: '100%',\n    height: '300px'\n  },\n  home: {\n    margin: '40px',\n    paddingTop: '100px'\n  },\n  title: {\n    padding: '15px',\n    color: '#FFE81F',\n    borderRadius: '10px',\n    backgroundColor: 'black',\n    textAlign: 'center'\n  }\n});\n\nconst getPerson = pageNo => {\n  const all = gql(_templateObject(), pageNo);\n  return all;\n};\n/*\nconst makeQuery = (pageNo) =>{\n    return(\n    <Query query={getPerson(pageNo)}>\n        {({loading, error, data }) =>{\n            if(loading) return 1\n            if(error) console.log(error)\n            return data;\n        }}\n    </Query>\n    )\n}*/\n\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeQuery = pageNo => {\n      return React.createElement(Query, {\n        query: getPerson(pageNo),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, ({\n        loading,\n        error,\n        data\n      }) => {\n        if (loading) return 1;\n        if (error) console.log(error);\n        console.log(data.getEveryPerson);\n        const result = data.getEveryPerson.results;\n        return result;\n      });\n    };\n\n    this.changeState = pageNo => {\n      const _this$makeQuery = this.makeQuery(pageNo),\n            data = _this$makeQuery.data;\n\n      console.log(data);\n    };\n\n    this.setPageNumber = pageNo => {\n      this.setState({\n        People: {\n          currentPage: pageNo\n        }\n      });\n    };\n\n    this.state = {\n      People: {\n        currentPage: null,\n        count: null,\n        people: null,\n        per_page: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"hello\");\n    const data = this.makeQuery(1);\n    console.log(data);\n    console.log('compo data');\n  }\n\n  render() {\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.People,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"CHARACTERS\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })));\n  }\n\n}\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js"],"names":["React","Component","gql","Query","useQuery","PropTypes","withStyles","poster","Person","Grid","styles","theme","width","height","home","margin","paddingTop","title","padding","color","borderRadius","backgroundColor","textAlign","getPerson","pageNo","all","Home","constructor","props","makeQuery","loading","error","data","console","log","getEveryPerson","result","results","changeState","setPageNumber","setState","People","currentPage","state","count","people","per_page","componentDidMount","render","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport { Grid } from '@material-ui/core';\n\nconst styles = theme=> ({\n    \n    poster:{\n        width: '100%',\n        height: '300px'\n    },\n    home:{\n        margin: '40px',\n        paddingTop: '100px',\n    },\n    title:{\n        \n        padding: '15px',\n        color: '#FFE81F',\n        borderRadius: '10px',\n        backgroundColor: 'black',\n        textAlign: 'center'\n    }\n})\n\nconst getPerson = (pageNo) =>{\n    \n    const all = gql`\n    query{\n        \n        getEveryPerson(page: ${pageNo}){\n            count\n            next\n            results{\n                name\n                gender\n                skin_color\n                birth_year\n                eye_color\n\n            }\n        }\n    }\n    `;\n\n    return all;\n    \n}\n/*\nconst makeQuery = (pageNo) =>{\n    return(\n    <Query query={getPerson(pageNo)}>\n        {({loading, error, data }) =>{\n            if(loading) return 1\n            if(error) console.log(error)\n            return data;\n        }}\n    </Query>\n    )\n}*/\n\nexport class Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            People: {\n                currentPage: null,\n                count: null,\n                people: null,\n                per_page: null,\n            }\n            \n        }\n    }\n    makeQuery = (pageNo) =>{\n        return(\n        <Query query={getPerson(pageNo)}>\n            {({loading, error, data }) =>{\n                if(loading) return 1\n                if(error) console.log(error)\n                console.log(data.getEveryPerson);\n                const result = data.getEveryPerson.results\n                return result;\n            }}\n        </Query>\n        )\n    }\n    changeState = (pageNo) =>{\n        const { data } = this.makeQuery(pageNo);\n        console.log(data);\n    }\n    \n    setPageNumber = pageNo =>{\n        this.setState({\n            People:{\n                currentPage: pageNo\n            }\n        })\n    }\n\n    componentDidMount(){\n        console.log(\"hello\");\n        const data = this.makeQuery(1);\n        \n        console.log(data);\n        console.log('compo data');\n    }\n\n    render() {\n\n        let { classes } = this.props;\n\n        return (\n\n            \n            <div className={classes.home}>\n            \n                <div className={classes.People}>\n\n                    <h1 className={classes.title}>CHARACTERS</h1>\n                    <Grid container>\n                    {/*\n                        <Query query={getPerson(this.state.People.currentPage)}>\n                        {\n                            ({loading,error,data}) =>{\n                                if(loading) return <h2>Loading ....</h2>\n                                if(error) console.log(error)\n                                console.log(data.getEveryPerson.results)\n\n                                return <Person people={data.getEveryPerson.results} />\n\n                            }                            \n                        }\n                    </Query>*/}\n                    </Grid>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}