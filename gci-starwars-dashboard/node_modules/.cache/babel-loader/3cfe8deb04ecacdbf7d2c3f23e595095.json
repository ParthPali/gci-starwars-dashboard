{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js\";\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEverySpecies(page: \", \"){\\n\\n            results{\\n                name\\n                classification\\n                average_height\\n                homeworld\\n                homeworldData{\\n                    name\\n                }\\n                language\\n            }\\n        }\\n\\n        \\n    }\\n    \"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryStarShip(page: \", \"){\\n\\n            results{\\n                cargo_capacity\\n                cost_in_credits\\n                created\\n                crew\\n                model\\n                name\\n                passengers\\n                MGLT\\n                hyperdrive_rating\\n                manufacturer\\n\\n            }\\n        }\\n\\n        \\n    }\\n    \"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryVehicle(page: \", \"){\\n\\n            results{\\n                cargo_capacity\\n                cost_in_credits\\n                created\\n                crew\\n                model\\n                name\\n                passengers\\n            }\\n        }\\n\\n        \\n    }\\n    \"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryPlanet(page: \", \"){\\n\\n            results{\\n                name\\n                population\\n                gravity\\n                climate\\n                created\\n                diameter\\n                surface_water\\n                terrain\\n            }\\n        }\\n\\n        \\n    }\\n    \"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        getEveryFilm{\\n            count\\n            results{\\n                episode_id\\n                title\\n                director\\n                release_date\\n                created \\n                producer\\n                \\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryPerson(page: \", \"){\\n\\n            results{\\n                name\\n                gender\\n                skin_color\\n                birth_year\\n                eye_color\\n                hair_color\\n                mass\\n                films{\\n                    title\\n                }\\n                starships{\\n                    name\\n                }\\n                vehicles{\\n                    name\\n                }\\n\\n            }\\n        }\\n\\n        \\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport Film from './Film.js';\nimport Planet from './Planet';\nimport Vehicle from './Vehicle';\nimport StarShip from './StarShip';\nimport Species from './Species';\nimport { Grid } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql'\n});\n\nconst getPerson = pageNo => {\n  const all = gql(_templateObject(), pageNo);\n  return all;\n};\n\nconst getFilm = () => {\n  const all = gql(_templateObject2());\n  return all;\n};\n\nconst getPlanet = pageNo => {\n  const all = gql(_templateObject3(), pageNo);\n  return all;\n};\n\nconst getVehicle = pageNo => {\n  const all = gql(_templateObject4(), pageNo);\n  return all;\n};\n\nconst getStarShip = pageNo => {\n  const all = gql(_templateObject5(), pageNo);\n  return all;\n};\n\nconst getSpecies = pageNo => {\n  const all = gql(_templateObject6(), pageNo);\n  return all;\n};\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.QueryPeople = async pageNo => {\n      await client.query({\n        query: getPerson(pageNo)\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          people: data.getEveryPerson.results\n        });\n      });\n    };\n\n    this.QueryFilm = async () => {\n      await client.query({\n        query: getFilm()\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          film: data.getEveryFilm.results\n        });\n      });\n    };\n\n    this.QueryPlanet = async pageNo => {\n      await client.query({\n        query: getPlanet(pageNo)\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          planet: data.getEveryPlanet.results\n        });\n      });\n    };\n\n    this.QueryVehicle = async pageNo => {\n      await client.query({\n        query: getVehicle(pageNo)\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          Vehicle: data.getEveryVehicle.results\n        });\n      });\n    };\n\n    this.QueryStarShip = async pageNo => {\n      await client.query({\n        query: getStarShip(pageNo)\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          StarShip: data.getEveryStarShip.results\n        });\n      });\n    };\n\n    this.QuerySpecies = async pageNo => {\n      await client.query({\n        query: getSpecies(pageNo)\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          Species: data.getEverySpecies.results\n        });\n      });\n    };\n\n    this.state = {\n      people: null,\n      film: null,\n      planet: null,\n      Vehicle: null,\n      StarShip: null,\n      Species: null\n    };\n  }\n\n  async setData(point, pageNo) {\n    if (point == 'person') {\n      await this.QueryPeople(pageNo);\n    }\n\n    if (point == 'planet') {\n      await this.QueryPlanet(pageNo);\n    }\n\n    if (point == 'vehicle') {\n      await this.QueryVehicle(pageNo);\n    }\n\n    if (point == 'starship') {\n      await this.QueryStarShip(pageNo);\n    }\n\n    if (point == 'species') {\n      await this.QuerySpecies(pageNo);\n    }\n  }\n\n  async componentDidMount() {\n    await this.setData('person', 1);\n    await this.setData('planet', 1);\n    await this.setData('vehicle', 1);\n    await this.setData('starship', 1);\n    await this.setData('species', 1);\n    await this.QueryFilm();\n  }\n\n  render() {\n    const number = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"CHARACTERS\"), (() => {\n      if (this.state.people == null) {\n        return React.createElement(\"div\", {\n          className: classes.loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, React.createElement(LinearProgress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Person, {\n          people: this.state.people,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        });\n      }\n    })(), React.createElement(\"ul\", {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.listButton,\n      onClick: () => this.setData('person', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"4\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"5\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"6\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"7\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 8),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"8\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 9),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"9\")))), React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"Films\"), (() => {\n      if (this.state.film == null) {\n        return React.createElement(\"div\", {\n          className: classes.loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, React.createElement(LinearProgress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Film, {\n          film: this.state.film,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        });\n      }\n    })()), React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"PLANETS\"), (() => {\n      if (this.state.planet == null) {\n        return React.createElement(\"div\", {\n          className: classes.loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }, React.createElement(LinearProgress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Planet, {\n          planet: this.state.planet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393\n          },\n          __self: this\n        });\n      }\n    })(), React.createElement(\"ul\", {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"4\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"5\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"6\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"7\")))), React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Vehicles\"), React.createElement(Vehicle, {\n      vehicle: this.state.Vehicle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('vehicle', 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"4\")))), React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"StarShips\"), React.createElement(StarShip, {\n      starship: this.state.StarShip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('starship', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('starship', 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('starship', 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('starship', 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, \"4\")))), React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"Species\"), React.createElement(Species, {\n      species: this.state.Species,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('species', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('species', 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('species', 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      className: classes.listitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('species', 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"4\"))))));\n  }\n\n}\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst styles = theme => ({\n  poster: {\n    width: '100%',\n    height: '600px'\n  },\n  home: {\n    margin: '70px',\n    paddingTop: '100px'\n  },\n  people: {\n    padding: '50px'\n  },\n  loading: {\n    textAlign: 'center'\n  },\n  title: {\n    padding: '15px',\n    color: '#FFE81F',\n    backgroundColor: 'black',\n    textAlign: 'center'\n  },\n  card: {\n    margin: '10px',\n    color: '#FFE81F',\n    backgroundColor: 'black'\n  },\n  name: {\n    borderBottom: '2px white'\n  },\n  list: {\n    textAlign: 'center',\n    backgroundColor: 'white',\n    marginTop: '10px',\n    display: 'flex',\n    flexDirection: 'row',\n    padding: 10\n  },\n  listitem: {\n    fontSize: '14px',\n    margin: '8px',\n    backgroundColor: '#F0F0F0',\n    border: '2px black',\n    listStyle: 'none'\n  },\n  listButton: {\n    border: '2px black'\n  }\n});\n\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js"],"names":["React","Component","gql","Query","useQuery","PropTypes","withStyles","poster","Person","Film","Planet","Vehicle","StarShip","Species","Grid","useEffect","ApolloClient","ApolloProvider","Card","CardActionArea","CardActions","CardContent","Button","Typography","List","ListItem","ListItemText","CircularProgress","LinearProgress","client","uri","getPerson","pageNo","all","getFilm","getPlanet","getVehicle","getStarShip","getSpecies","Home","constructor","props","QueryPeople","query","then","result","data","setState","people","getEveryPerson","results","QueryFilm","film","getEveryFilm","QueryPlanet","planet","getEveryPlanet","QueryVehicle","getEveryVehicle","QueryStarShip","getEveryStarShip","QuerySpecies","getEverySpecies","state","setData","point","componentDidMount","render","number","classes","home","title","loading","list","listitem","listButton","propTypes","object","isRequired","styles","theme","width","height","margin","paddingTop","padding","textAlign","color","backgroundColor","card","name","borderBottom","marginTop","display","flexDirection","fontSize","border","listStyle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport Film from './Film.js';\nimport Planet from './Planet';\nimport Vehicle from './Vehicle';\nimport StarShip from './StarShip';\nimport Species from './Species';\nimport { Grid } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:4000/graphql',\n  });\n\nconst getPerson = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryPerson(page: ${pageNo}){\n\n            results{\n                name\n                gender\n                skin_color\n                birth_year\n                eye_color\n                hair_color\n                mass\n                films{\n                    title\n                }\n                starships{\n                    name\n                }\n                vehicles{\n                    name\n                }\n\n            }\n        }\n\n        \n    }\n    `;\n\n    return all;\n    \n}\n\nconst getFilm = () =>{\n\n    const all = gql`\n    query{\n        getEveryFilm{\n            count\n            results{\n                episode_id\n                title\n                director\n                release_date\n                created \n                producer\n                \n            }\n        }\n    }\n    `;\n    return all;\n}\n\nconst getPlanet = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryPlanet(page: ${pageNo}){\n\n            results{\n                name\n                population\n                gravity\n                climate\n                created\n                diameter\n                surface_water\n                terrain\n            }\n        }\n\n        \n    }\n    `;\n\n    return all;\n    \n}\n\nconst getVehicle = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryVehicle(page: ${pageNo}){\n\n            results{\n                cargo_capacity\n                cost_in_credits\n                created\n                crew\n                model\n                name\n                passengers\n            }\n        }\n\n        \n    }\n    `;\n\n    return all;\n    \n}\n\nconst getStarShip = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryStarShip(page: ${pageNo}){\n\n            results{\n                cargo_capacity\n                cost_in_credits\n                created\n                crew\n                model\n                name\n                passengers\n                MGLT\n                hyperdrive_rating\n                manufacturer\n\n            }\n        }\n\n        \n    }\n    `;\n\n    return all;\n    \n}\n\nconst getSpecies = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEverySpecies(page: ${pageNo}){\n\n            results{\n                name\n                classification\n                average_height\n                homeworld\n                homeworldData{\n                    name\n                }\n                language\n            }\n        }\n\n        \n    }\n    `;\n\n    return all;\n    \n}\n\nexport class Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            people: null,\n            film: null,\n            planet: null,\n            Vehicle: null,\n            StarShip: null,\n            Species: null,       \n        }\n    }\n\n    QueryPeople = async pageNo =>{\n        await client.query({\n                    query: getPerson(pageNo)\n                        })\n                        .then(result => {\n                            const data = result.data   \n                            this.setState({\n                                people: data.getEveryPerson.results\n                                })\n                                    \n                        });\n    }\n\n    QueryFilm = async () =>{\n        await client.query({\n                    query: getFilm()\n                            })\n                            .then(result => {\n                                 const data = result.data\n                                this.setState({\n                                    film: data.getEveryFilm.results\n                                })\n                            });\n    }\n\n    QueryPlanet = async pageNo =>{\n        await client.query({\n                    query: getPlanet(pageNo)\n                            })\n                            .then(result => {\n                                const data = result.data  \n                                this.setState({\n                                    planet: data.getEveryPlanet.results\n                                })\n                                    \n                            });\n    }\n\n    QueryVehicle = async pageNo =>{\n        await client.query({\n                    query: getVehicle(pageNo)\n                            })\n                            .then(result => {\n                                const data = result.data  \n                                this.setState({\n                                    Vehicle: data.getEveryVehicle.results\n                                })\n                                    \n                            });\n    }\n\n    QueryStarShip = async pageNo =>{\n        await client.query({\n                    query: getStarShip(pageNo)\n                            })\n                            .then(result => {\n                                const data = result.data  \n                                this.setState({\n                                    StarShip: data.getEveryStarShip.results\n                                })\n                                    \n                            });\n    }\n\n    QuerySpecies = async pageNo =>{\n        await client.query({\n                    query: getSpecies(pageNo)\n                            })\n                            .then(result => {\n                                const data = result.data  \n                                this.setState({\n                                    Species: data.getEverySpecies.results\n                                })\n                                    \n                            });\n    }\n\n    async setData(point,pageNo){\n        if(point == 'person'){\n            await this.QueryPeople(pageNo);\n        }\n        if(point == 'planet'){\n            await this.QueryPlanet(pageNo);\n        }\n        if(point == 'vehicle'){\n            await this.QueryVehicle(pageNo);\n        }\n        if(point == 'starship'){\n            await this.QueryStarShip(pageNo);\n        }\n        if(point == 'species'){\n            await this.QuerySpecies(pageNo);\n        }\n    \n        \n    }\n    async componentDidMount(){\n        await this.setData('person',1);\n        await this.setData('planet',1);\n        await this.setData('vehicle',1);\n        await this.setData('starship',1);\n        await this.setData('species',1);\n        await this.QueryFilm();\n        \n    }\n    \n    render() {\n\n        const number = [1,2,3,4,5,6,7,8,9];\n        let { classes } = this.props;\n\n        return (\n        \n            <div className={classes.home}>\n            \n            <ApolloProvider client={client}>\n                <div className={classes.people}>\n\n                    <h1 className={classes.title}>CHARACTERS</h1>\n                    {(() => {\n                            if(this.state.people == null){\n                                return (\n                                    <div className={classes.loading}>\n                                        <LinearProgress />\n                                    </div>\n                                )\n                            }else{\n                                return(\n                                <Person people={this.state.people} />\n                            )}\n                    })()}\n                        \n                        \n                        <ul className={classes.list}>\n                            <li className={classes.listitem}><Button className={classes.listButton} onClick={() => this.setData('person',1)}>1</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('person',2)}>2</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('person',3)}>3</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('person',4)}>4</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('person',5)}>5</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('person',6)}>6</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('person',7)}>7</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('person',8)}>8</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('person',9)}>9</Button></li>\n                        </ul>\n\n                </div>\n\n                <div className={classes.people}>\n                    <h1 className={classes.title}>Films</h1>\n                    {(() => {\n                            if(this.state.film == null){\n                                return (\n                                    <div className={classes.loading}>\n                                        <LinearProgress />\n                                    </div>\n                                )\n                            }else{\n                                return(\n                                    <Film film={this.state.film} />\n                            )}\n                    })()}\n                        \n                </div>\n\n                <div className={classes.people}>\n\n                    <h1 className={classes.title}>PLANETS</h1>\n\n                    {(() => {\n                            if(this.state.planet == null){\n                                return (\n                                    <div className={classes.loading}>\n                                        <LinearProgress />\n                                    </div>\n                                )\n                            }else{\n                                return(\n                                    \n                                <Planet planet={this.state.planet} />\n                            )}\n                    })()}\n                    \n                        <ul className={classes.list}>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('planet',1)}>1</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('planet',2)}>2</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('planet',3)}>3</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('planet',4)}>4</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('planet',5)}>5</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('planet',6)}>6</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('planet',7)}>7</Button></li>\n                        </ul>\n\n                </div>\n\n                <div className={classes.people}>\n\n                    <h1 className={classes.title}>Vehicles</h1>\n                    \n                        <Vehicle vehicle={this.state.Vehicle} />\n                        <ul className={classes.list}>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('vehicle',1)}>1</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('vehicle',2)}>2</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('vehicle',3)}>3</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('vehicle',4)}>4</Button></li>\n                        </ul>\n\n                </div>\n\n                <div className={classes.people}>\n\n                    <h1 className={classes.title}>StarShips</h1>\n                    \n                        <StarShip starship={this.state.StarShip} />\n                        <ul className={classes.list}>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('starship',1)}>1</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('starship',2)}>2</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('starship',3)}>3</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('starship',4)}>4</Button></li>\n                        </ul>\n\n                </div>\n\n                <div className={classes.people}>\n\n                    <h1 className={classes.title}>Species</h1>\n                    \n                        <Species species={this.state.Species} />\n                        <ul className={classes.list}>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('species',1)}>1</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('species',2)}>2</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('species',3)}>3</Button></li>\n                            <li className={classes.listitem}><Button onClick={() => this.setData('species',4)}>4</Button></li>\n                        </ul>\n\n                </div>\n                </ApolloProvider>\n            </div>\n        \n        )\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme=> ({\n    \n    poster:{\n        width: '100%',\n        height: '600px'\n    },\n    home:{\n        margin: '70px',\n        paddingTop: '100px',\n    },\n    people:{\n        padding: '50px',\n    },\n    loading: {\n        textAlign: 'center'\n    },\n    title:{\n        \n        padding: '15px',\n        color: '#FFE81F',\n        \n        backgroundColor: 'black',\n        textAlign: 'center'\n    },\n    card:{\n        margin: '10px',\n        color: '#FFE81F',\n        backgroundColor: 'black'\n    },\n    name:{\n\n        borderBottom: '2px white'\n    },\n    list:{\n        textAlign: 'center',\n        backgroundColor: 'white',\n        marginTop: '10px',\n\n        display: 'flex',\n        flexDirection: 'row',\n        padding: 10,\n    },\n    listitem:{\n        fontSize: '14px',\n        margin: '8px',\n        backgroundColor: '#F0F0F0',\n        border: '2px black',\n        listStyle: 'none'\n    },\n    listButton:{\n        \n        border: '2px black'\n    }\n})\n\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}