{"ast":null,"code":"var _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Person.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n  card: {\n    margin: '10px',\n    color: '#FFE81F',\n    backgroundColor: 'black'\n  },\n  name: {\n    borderBottom: '2px white'\n  },\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 650\n  }\n});\n\nexport class Person extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      person: null\n    };\n  }\n\n  render() {\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, (() => {\n      if (this.props.people == null) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Loading\");\n      } else {\n        return this.props.people.map(person => React.createElement(Paper, {\n          className: classes.root,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(TableHead, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(TableRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Name\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Birth Year\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Gender\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Eye color\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Skin Color\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"More Details\"))), React.createElement(TableBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, () => {\n          if (this.props.person == null) {\n            return React.createElement(\"h1\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }, \"Loading\");\n          } else {\n            return React.createElement(TableRow, {\n              key: person.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96\n              },\n              __self: this\n            }, React.createElement(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            }, person.name), React.createElement(TableCell, {\n              align: \"right\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98\n              },\n              __self: this\n            }, person.birth_year), React.createElement(TableCell, {\n              align: \"right\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, person.gender), React.createElement(TableCell, {\n              align: \"right\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, person.eye_color), React.createElement(TableCell, {\n              align: \"right\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101\n              },\n              __self: this\n            }, person.skin_color), React.createElement(TableCell, {\n              align: \"right\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, React.createElement(Button, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, \"Know More\")));\n          }\n        }))));\n      }\n    })());\n  }\n\n}\nPerson.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Person);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Person.js"],"names":["React","Component","PropTypes","withStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","Grid","List","ListItem","ListItemText","Table","TableBody","TableCell","TableHead","TableRow","Paper","styles","theme","card","margin","color","backgroundColor","name","borderBottom","root","width","overflowX","table","minWidth","Person","constructor","props","state","person","render","classes","people","map","birth_year","gender","eye_color","skin_color","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme=> ({\n    card:{\n        margin: '10px',\n        color: '#FFE81F',\n        backgroundColor: 'black'\n    },\n    name:{\n\n        borderBottom: '2px white'\n    },\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n      },\n      table: {\n        minWidth: 650,\n      },\n});\n\n\nexport class Person extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n\n            person: null\n            \n        }\n    }\n\n    \n    render() {\n\n        let { classes } = this.props;\n\n        return (\n            <div>\n            \n            \n            {(() => {\n                if (this.props.people == null) {\n                return (\n                    <h1>Loading</h1>\n                )\n            \n                } else {\n                return (\n                    this.props.people.map(person => (\n\n                        <Paper className={classes.root}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                            \n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Name</TableCell>\n                                        <TableCell align=\"right\">Birth Year</TableCell>\n                                        <TableCell align=\"right\">Gender</TableCell>\n                                        <TableCell align=\"right\">Eye color</TableCell>\n                                        <TableCell align=\"right\">Skin Color</TableCell>\n                                        <TableCell align=\"right\">More Details</TableCell>\n                                    </TableRow>\n                                </TableHead>\n\n                                <TableBody>\n                                {(() => {\n                                    if(this.props.person == null){\n                                        return(\n                                            <h1>Loading</h1>\n                                        )\n                                    }\n\n                                    else{\n\n                                    return(\n                                    <TableRow key={person.name}>\n                                        <TableCell component=\"th\" scope=\"row\">{person.name}</TableCell>\n                                        <TableCell align=\"right\">{person.birth_year}</TableCell>\n                                        <TableCell align=\"right\">{person.gender}</TableCell>\n                                        <TableCell align=\"right\">{person.eye_color}</TableCell>\n                                        <TableCell align=\"right\">{person.skin_color}</TableCell>\n                                        <TableCell align=\"right\"><Button>Know More</Button></TableCell>\n                                    </TableRow>\n                                    )}\n                                })}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                        ))\n                )\n                }\n            })()}\n            \n            </div>\n        )\n    }\n}\n\nPerson.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Person);"]},"metadata":{},"sourceType":"module"}