{"ast":null,"code":"var _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Person.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { NavLink } from 'react-router-dom';\nimport Ind_Person from './Individual/Ind_Person';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  card: {\n    margin: '10px',\n    color: '#FFE81F',\n    backgroundColor: 'black'\n  },\n  name: {\n    borderBottom: '2px white'\n  },\n  root: {\n    color: '#FFE81F'\n  },\n  table: {\n    backgroundColor: 'white',\n    color: 'grey'\n  },\n  loading: {\n    align: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  tableHead: {\n    padding: '20x',\n    backgroundColor: 'white'\n  },\n  thead: {\n    fontSize: '20px',\n    color: 'black'\n  },\n  tcell: {\n    \"&:hover\": {\n      color: '#FFE81F'\n    },\n    fontSize: '18px',\n    color: 'grey'\n  },\n  row: {\n    \"&:hover\": {\n      boxShadow: '10px 10px 10px'\n    }\n  }\n});\n\nexport class Person extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        setOpen: true,\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false,\n        setOpen: false\n      });\n    };\n\n    this.state = {\n      open: false,\n      setOpen: false\n    };\n  }\n\n  render() {\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      className: classes.tableHead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: classes.thead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Birth Year\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Mass\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Eye color\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Skin Color\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Hair Color\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Films\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, (() => {\n      if (this.props.people == null) {\n        return React.createElement(\"div\", {\n          className: classes.loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(LinearProgress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }));\n      } else {\n        return this.props.people.map(person => React.createElement(TableRow, {\n          row: person.name,\n          className: classes.row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: classes.tcell,\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, person.name), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, person.gender), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, person.birth_year), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, person.mass), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, person.eye_color), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, person.skin_color), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, person.hair_color), React.createElement(TableCell, {\n          className: classes.tcell,\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, person.films.map(film => React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, film.title, \",\"))))));\n      }\n    })()))));\n  }\n\n}\nPerson.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Person);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Person.js"],"names":["React","Component","PropTypes","withStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","Grid","List","ListItem","ListItemText","Table","TableBody","TableCell","TableHead","TableRow","Paper","NavLink","Ind_Person","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","LinearProgress","CircularProgress","styles","theme","card","margin","color","backgroundColor","name","borderBottom","root","table","loading","align","alignItems","textAlign","width","marginTop","spacing","tableHead","padding","thead","fontSize","tcell","row","boxShadow","Person","constructor","props","handleClickOpen","setState","setOpen","open","handleClose","state","render","classes","people","map","person","gender","birth_year","mass","eye_color","skin_color","hair_color","films","film","title","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AACA,MAAMC,MAAM,GAAGC,KAAK,KAAI;AACpBC,EAAAA,IAAI,EAAC;AACDC,IAAAA,MAAM,EAAE,MADP;AAEDC,IAAAA,KAAK,EAAE,SAFN;AAGDC,IAAAA,eAAe,EAAE;AAHhB,GADe;AAMpBC,EAAAA,IAAI,EAAC;AAEDC,IAAAA,YAAY,EAAE;AAFb,GANe;AAUpBC,EAAAA,IAAI,EAAC;AACDJ,IAAAA,KAAK,EAAE;AADN,GAVe;AAapBK,EAAAA,KAAK,EAAC;AAEFJ,IAAAA,eAAe,EAAC,OAFd;AAGFD,IAAAA,KAAK,EAAE;AAHL,GAbc;AAkBpBM,EAAAA,OAAO,EAAC;AACJC,IAAAA,KAAK,EAAE,QADH;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,SAAS,EAAE,QAHP;AAIJC,IAAAA,KAAK,EAAE,MAJH;AAKJ,iBAAa;AACTC,MAAAA,SAAS,EAAEd,KAAK,CAACe,OAAN,CAAc,CAAd;AADF;AALT,GAlBY;AA4BpBC,EAAAA,SAAS,EAAC;AACNC,IAAAA,OAAO,EAAE,KADH;AAENb,IAAAA,eAAe,EAAE;AAFX,GA5BU;AAgCpBc,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,MADP;AAGHhB,IAAAA,KAAK,EAAC;AAHH,GAhCa;AAqCpBiB,EAAAA,KAAK,EAAE;AACH,eAAU;AACNjB,MAAAA,KAAK,EAAE;AADD,KADP;AAIHgB,IAAAA,QAAQ,EAAE,MAJP;AAMHhB,IAAAA,KAAK,EAAE;AANJ,GArCa;AA6CpBkB,EAAAA,GAAG,EAAC;AACA,eAAU;AACNC,MAAAA,SAAS,EAAE;AADL;AADV;AA7CgB,CAAJ,CAApB;;AAsDA,OAAO,MAAMC,MAAN,SAAqBrD,SAArB,CAA+B;AAElCsD,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,eATmB,GASD,MAAM;AACpB,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,IAAI,EAAE;AAFI,OAAd;AAIH,KAdkB;;AAAA,SAgBnBC,WAhBmB,GAgBL,MAAM;AAChB,WAAKH,QAAL,CAAc;AACVE,QAAAA,IAAI,EAAE,KADI;AAEVD,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KArBkB;;AAEf,SAAKG,KAAL,GAAa;AACTF,MAAAA,IAAI,EAAE,KADG;AAETD,MAAAA,OAAO,EAAE;AAFA,KAAb;AAKH;;AAgBDI,EAAAA,MAAM,GAAG;AAAA,QAECC,OAFD,GAEa,KAAKR,KAFlB,CAECQ,OAFD;AAIL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEY,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEA,OAAO,CAAC1B,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE0B,OAAO,CAACzB,KAA1B;AAAiC,oBAAW,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEyB,OAAO,CAACjB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAACb,QAAAA,KAAK,EAAC;AAAP,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE8B,OAAO,CAACf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEe,OAAO,CAACf,KAA9B;AAAqC,MAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEe,OAAO,CAACf,KAA9B;AAAqC,MAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAII,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEe,OAAO,CAACf,KAA9B;AAAqC,MAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEe,OAAO,CAACf,KAA9B;AAAqC,MAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,EAMI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEe,OAAO,CAACf,KAA9B;AAAqC,MAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,EAOI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEe,OAAO,CAACf,KAA9B;AAAqC,MAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,EAQI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEe,OAAO,CAACf,KAA9B;AAAqC,MAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,CADJ,CAFJ,EAiBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,MAAM;AACJ,UAAG,KAAKO,KAAL,CAAWS,MAAX,IAAqB,IAAxB,EAA6B;AACzB,eACE;AAAK,UAAA,SAAS,EAAED,OAAO,CAACxB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKH,OAND,MAMK;AACD,eACI,KAAKgB,KAAL,CAAWS,MAAX,CAAkBC,GAAlB,CAAsBC,MAAM,IAC5B,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,MAAM,CAAC/B,IAAtB;AAA4B,UAAA,SAAS,EAAE4B,OAAO,CAACZ,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEY,OAAO,CAACb,KAA9B;AAAqC,UAAA,SAAS,EAAC,IAA/C;AAAoD,UAAA,KAAK,EAAC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiEgB,MAAM,CAAC/B,IAAxE,CADJ,EAEI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAE4B,OAAO,CAACb,KAA9B;AAAqC,UAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoDgB,MAAM,CAACC,MAA3D,CAFJ,EAGI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEJ,OAAO,CAACb,KAA9B;AAAqC,UAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoDgB,MAAM,CAACE,UAA3D,CAHJ,EAII,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEL,OAAO,CAACb,KAA9B;AAAqC,UAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoDgB,MAAM,CAACG,IAA3D,CAJJ,EAKI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEN,OAAO,CAACb,KAA9B;AAAqC,UAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoDgB,MAAM,CAACI,SAA3D,CALJ,EAMI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEP,OAAO,CAACb,KAA9B;AAAqC,UAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoDgB,MAAM,CAACK,UAA3D,CANJ,EAOI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAER,OAAO,CAACb,KAA9B;AAAqC,UAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoDgB,MAAM,CAACM,UAA3D,CAPJ,EASI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAET,OAAO,CAACb,KAA9B;AAAqC,UAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCgB,MAAM,CAACO,KAAP,CAAaR,GAAb,CAAiBS,IAAI,IAElB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaA,IAAI,CAACC,KAAlB,MAFH,CADD,CADA,CATJ,CADA,CADJ;AAuBK;AACJ,KAhCR,GADL,CAjBJ,CADJ,CAFZ,CADJ;AA8DH;;AA3FiC;AA8FtCtB,MAAM,CAACuB,SAAP,GAAmB;AACfb,EAAAA,OAAO,EAAE9D,SAAS,CAAC4E,MAAV,CAAiBC;AADX,CAAnB;AAIA,eAAe5E,UAAU,CAAC2B,MAAD,CAAV,CAAmBwB,MAAnB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { NavLink } from 'react-router-dom';\nimport Ind_Person from './Individual/Ind_Person';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst styles = theme=> ({\n    card:{\n        margin: '10px',\n        color: '#FFE81F',\n        backgroundColor: 'black'\n    },\n    name:{\n\n        borderBottom: '2px white'\n    },\n    root:{\n        color: '#FFE81F'\n    },\n    table:{\n        \n        backgroundColor:'white',\n        color: 'grey'\n    },\n    loading:{\n        align: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n          },\n        \n    },\n    tableHead:{\n        padding: '20x',\n        backgroundColor: 'white'\n    },\n    thead: {\n        fontSize: '20px',\n        \n        color:'black'\n    },\n    tcell: {\n        \"&:hover\":{\n            color: '#FFE81F'\n        },\n        fontSize: '18px',\n        \n        color: 'grey'\n    },\n    row:{\n        \"&:hover\":{\n            boxShadow: '10px 10px 10px',\n        },\n    }\n\n});\n\n\nexport class Person extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            setOpen: false\n        }\n\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            setOpen: true,\n            open: true\n        })\n    }\n\n    handleClose = () => {\n        this.setState({\n            open: false,\n            setOpen: false\n        })\n    }\n    \n    render() {\n\n        let { classes } = this.props;\n        \n        return (\n            <div>\n        \n                        <Paper className={classes.root}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                            \n                                <TableHead className={classes.tableHead}>\n                                    <TableRow style={{color:'white'}}>\n                                        <TableCell className={classes.thead}>Name</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Gender</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Birth Year</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Mass</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Eye color</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Skin Color</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Hair Color</TableCell>             \n                                        <TableCell className={classes.thead} align=\"right\">Films</TableCell>\n\n                                        \n                                    </TableRow>\n                                </TableHead>\n\n                                <TableBody>\n                                    {(() => {\n                                        if(this.props.people == null){\n                                            return (\n                                              <div className={classes.loading}>\n                                                <LinearProgress />\n                                              </div>\n                                            )\n                                        }else{\n                                            return(\n                                                this.props.people.map(person => (\n                                                <TableRow row={person.name} className={classes.row}>\n                                                    <TableCell className={classes.tcell} component=\"th\" scope=\"row\">{person.name}</TableCell>\n                                                    <TableCell className={classes.tcell} align=\"right\">{person.gender}</TableCell>\n                                                    <TableCell className={classes.tcell} align=\"right\">{person.birth_year}</TableCell>\n                                                    <TableCell className={classes.tcell} align=\"right\">{person.mass}</TableCell>\n                                                    <TableCell className={classes.tcell} align=\"right\">{person.eye_color}</TableCell>\n                                                    <TableCell className={classes.tcell} align=\"right\">{person.skin_color}</TableCell>\n                                                    <TableCell className={classes.tcell} align=\"right\">{person.hair_color}</TableCell>\n\n                                                    <TableCell className={classes.tcell} align=\"right\">\n                                                    <p>\n                                                    {person.films.map(film => (\n                                                        \n                                                        <Typography>{film.title},</Typography>\n                                                    ))}\n                                                    </p>\n                                                    </TableCell>\n\n                                                </TableRow>\n                                                ))\n                                                )\n                                                }\n                                            })()}\n                                </TableBody>\n\n                            </Table>\n                        </Paper>\n            \n            </div>\n        )\n    }\n}\n\nPerson.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Person);"]},"metadata":{},"sourceType":"module"}