{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryPerson(page: 1){\\n            count\\n            next\\n            results{\\n                name\\n                gender\\n                skin_color\\n                birth_year\\n                eye_color\\n\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport { Grid } from '@material-ui/core';\nimport { useEffect } from 'react';\n\nconst styles = theme => ({\n  poster: {\n    width: '100%',\n    height: '300px'\n  },\n  home: {\n    margin: '40px',\n    paddingTop: '100px'\n  },\n  title: {\n    padding: '15px',\n    color: '#FFE81F',\n    borderRadius: '10px',\n    backgroundColor: 'black',\n    textAlign: 'center'\n  }\n});\n/*\nconst getPerson = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryPerson(page: ${pageNo}){\n            count\n            next\n            results{\n                name\n                gender\n                skin_color\n                birth_year\n                eye_color\n\n            }\n        }\n    }\n    `;\n\n    return all;\n    \n}*/\n\n\nconst SW_PEOPLE = gql(_templateObject());\n\nfunction MakeQuery({\n  pageNo\n}) {\n  const _useQuery = useQuery(SW_PEOPLE, {\n    variables: {\n      pageNo\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  console.log(data.getEveryPerson); //return data.getEveryPerson;\n}\n/*\nfunction ChangeState(){\n    const data = MakeQuery(1);\n    console.log(data);\n}*/\n\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      People: {\n        currentPage: 1,\n        count: null,\n        people: null,\n        per_page: null\n      }\n    };\n  }\n\n  useEffect() {\n    MakeQuery(1);\n  }\n\n  render() {\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.People,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"CHARACTERS\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.useEffect())));\n  }\n\n}\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js"],"names":["React","Component","gql","Query","useQuery","PropTypes","withStyles","poster","Person","Grid","useEffect","styles","theme","width","height","home","margin","paddingTop","title","padding","color","borderRadius","backgroundColor","textAlign","SW_PEOPLE","MakeQuery","pageNo","variables","loading","error","data","console","log","getEveryPerson","Home","constructor","props","state","People","currentPage","count","people","per_page","render","classes","propTypes","object","isRequired"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AACA,MAAMC,MAAM,GAAGC,KAAK,KAAI;AAEpBL,EAAAA,MAAM,EAAC;AACHM,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL,GAFa;AAMpBC,EAAAA,IAAI,EAAC;AACDC,IAAAA,MAAM,EAAE,MADP;AAEDC,IAAAA,UAAU,EAAE;AAFX,GANe;AAUpBC,EAAAA,KAAK,EAAC;AAEFC,IAAAA,OAAO,EAAE,MAFP;AAGFC,IAAAA,KAAK,EAAE,SAHL;AAIFC,IAAAA,YAAY,EAAE,MAJZ;AAKFC,IAAAA,eAAe,EAAE,OALf;AAMFC,IAAAA,SAAS,EAAE;AANT;AAVc,CAAJ,CAApB;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAMC,SAAS,GAAItB,GAAJ,mBAAf;;AAkBA,SAASuB,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA6B;AAAA,oBACMtB,QAAQ,CAACoB,SAAD,EAAW;AAC9CG,IAAAA,SAAS,EAAE;AAAED,MAAAA;AAAF;AADmC,GAAX,CADd;AAAA,QAClBE,OADkB,aAClBA,OADkB;AAAA,QACTC,KADS,aACTA,KADS;AAAA,QACFC,IADE,aACFA,IADE;;AAIzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,cAAjB,EAJyB,CAKzB;AACH;AAED;;;;;;;AAOA,OAAO,MAAMC,IAAN,SAAmBjC,SAAnB,CAA6B;AAEhCkC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAETC,MAAAA,MAAM,EAAE;AACJC,QAAAA,WAAW,EAAE,CADT;AAEJC,QAAAA,KAAK,EAAE,IAFH;AAGJC,QAAAA,MAAM,EAAE,IAHJ;AAIJC,QAAAA,QAAQ,EAAE;AAJN;AAFC,KAAb;AAUH;;AAGDhC,EAAAA,SAAS,GAAE;AACPe,IAAAA,SAAS,CAAC,CAAD,CAAT;AACH;;AAEDkB,EAAAA,MAAM,GAAG;AAAA,QAECC,OAFD,GAEa,KAAKR,KAFlB,CAECQ,OAFD;AAIL,WAGI;AAAK,MAAA,SAAS,EAAEA,OAAO,CAAC7B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAE6B,OAAO,CAACN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAI,MAAA,SAAS,EAAEM,OAAO,CAAC1B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKR,SAAL,EADD,CAHJ,CAFJ,CAHJ;AA4BH;;AArD+B;AAwDpCwB,IAAI,CAACW,SAAL,GAAiB;AACbD,EAAAA,OAAO,EAAEvC,SAAS,CAACyC,MAAV,CAAiBC;AADb,CAAjB;AAIA,eAAezC,UAAU,CAACK,MAAD,CAAV,CAAmBuB,IAAnB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport { Grid } from '@material-ui/core';\nimport { useEffect } from 'react';\nconst styles = theme=> ({\n    \n    poster:{\n        width: '100%',\n        height: '300px'\n    },\n    home:{\n        margin: '40px',\n        paddingTop: '100px',\n    },\n    title:{\n        \n        padding: '15px',\n        color: '#FFE81F',\n        borderRadius: '10px',\n        backgroundColor: 'black',\n        textAlign: 'center'\n    }\n})\n/*\nconst getPerson = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryPerson(page: ${pageNo}){\n            count\n            next\n            results{\n                name\n                gender\n                skin_color\n                birth_year\n                eye_color\n\n            }\n        }\n    }\n    `;\n\n    return all;\n    \n}*/\nconst SW_PEOPLE  = gql`\n    query{\n        \n        getEveryPerson(page: 1){\n            count\n            next\n            results{\n                name\n                gender\n                skin_color\n                birth_year\n                eye_color\n\n            }\n        }\n    }\n    `;\n\nfunction MakeQuery({pageNo}) {\n    const {loading, error, data} = useQuery(SW_PEOPLE,{\n        variables: { pageNo }\n    });\n    console.log(data.getEveryPerson);\n    //return data.getEveryPerson;\n}\n\n/*\nfunction ChangeState(){\n    const data = MakeQuery(1);\n    console.log(data);\n}*/\n\n\nexport class Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            People: {\n                currentPage: 1,\n                count: null,\n                people: null,\n                per_page: null,\n            }\n            \n        }\n    }\n    \n    \n    useEffect(){\n        MakeQuery(1);\n    }\n\n    render() {\n\n        let { classes } = this.props;\n\n        return (\n\n            \n            <div className={classes.home}>\n            \n                <div className={classes.People}>\n\n                    <h1 className={classes.title}>CHARACTERS</h1>\n                    <Grid container>\n                    {this.useEffect()}\n                    {/*\n                        <Query query={getPerson(1)}>\n                        {\n                            ({loading,error,data}) =>{\n                                if(loading) return <h2>Loading ....</h2>\n                                if(error) console.log(error)\n                                console.log(data.getEveryPerson.results)\n\n                                return <Person people={data.getEveryPerson.results} />\n\n                            }                            \n                        }\n                    </Query>*/}\n                    </Grid>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}