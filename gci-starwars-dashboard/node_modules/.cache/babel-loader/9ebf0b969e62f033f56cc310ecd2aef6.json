{"ast":null,"code":"var _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Person.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst styles = theme => ({\n  card: {\n    margin: '10px',\n    color: '#FFE81F',\n    backgroundColor: 'black'\n  },\n  name: {\n    borderBottom: '2px white'\n  }\n});\n\nexport class Person extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      person: null\n    };\n  }\n\n  render() {\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, (() => {\n      if (this.props.people == null) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Loading\");\n      } else {\n        return this.props.people.map(person => React.createElement(Grid, {\n          item: true,\n          sm: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: classes.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(CardActionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          className: classes.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, person.name), React.createElement(List, {\n          style: {\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Birth Year: \", person.birth_year)), React.createElement(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Gender: \", person.gender)), React.createElement(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Eye Color: \", person.eye_color)), React.createElement(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Skin Color: \", person.skin_color)), React.createElement(CardActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          style: {\n            color: '#FFE81F'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Know More\"))))))));\n      }\n    })()));\n  }\n\n}\nPerson.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Person);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Person.js"],"names":["React","Component","PropTypes","withStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","Grid","List","ListItem","ListItemText","styles","theme","card","margin","color","backgroundColor","name","borderBottom","Person","constructor","props","state","person","render","classes","people","map","birth_year","gender","eye_color","skin_color","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAI;AACpBC,EAAAA,IAAI,EAAC;AACDC,IAAAA,MAAM,EAAE,MADP;AAEDC,IAAAA,KAAK,EAAE,SAFN;AAGDC,IAAAA,eAAe,EAAE;AAHhB,GADe;AAMpBC,EAAAA,IAAI,EAAC;AAEDC,IAAAA,YAAY,EAAE;AAFb;AANe,CAAJ,CAApB;;AAaA,OAAO,MAAMC,MAAN,SAAqBrB,SAArB,CAA+B;AAElCsB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAKH;;AAGDC,EAAAA,MAAM,GAAG;AAAA,QAECC,OAFD,GAEa,KAAKJ,KAFlB,CAECI,OAFD;AAIL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,CAAC,MAAM;AACJ,UAAI,KAAKJ,KAAL,CAAWK,MAAX,IAAqB,IAAzB,EAA+B;AAC/B,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ;AAIC,OALD,MAKO;AACP,eACI,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,GAAlB,CAAsBJ,MAAM,IAExB,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAEE,OAAO,CAACZ,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,IAAjC;AAAsC,UAAA,SAAS,EAAC,IAAhD;AAAqD,UAAA,SAAS,EAAEY,OAAO,CAACR,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKM,MAAM,CAACN,IADZ,CADJ,EAKI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACF,YAAAA,KAAK,EAAE;AAAR,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2BQ,MAAM,CAACK,UAAlC,CADJ,CAFR,EAMQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuBL,MAAM,CAACM,MAA9B,CADJ,CANR,EAUQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA0BN,MAAM,CAACO,SAAjC,CADJ,CAVR,EAcQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2BP,MAAM,CAACQ,UAAlC,CADJ,CAdR,EAkBQ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,KAAK,EAAE;AAAChB,YAAAA,KAAK,EAAE;AAAR,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAlBR,CALJ,CADJ,CADJ,CADJ,CAFJ,CADJ;AA4CC;AACJ,KApDA,GAFD,CADA,CADJ;AA8DH;;AA9EiC;AAiFtCI,MAAM,CAACa,SAAP,GAAmB;AACfP,EAAAA,OAAO,EAAE1B,SAAS,CAACkC,MAAV,CAAiBC;AADX,CAAnB;AAIA,eAAelC,UAAU,CAACW,MAAD,CAAV,CAAmBQ,MAAnB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst styles = theme=> ({\n    card:{\n        margin: '10px',\n        color: '#FFE81F',\n        backgroundColor: 'black'\n    },\n    name:{\n\n        borderBottom: '2px white'\n    }\n});\n\n\nexport class Person extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n\n            person: null\n            \n        }\n    }\n\n    \n    render() {\n\n        let { classes } = this.props;\n\n        return (\n            <div>\n            <Grid container>\n            \n            {(() => {\n                if (this.props.people == null) {\n                return (\n                    <h1>Loading</h1>\n                )\n            \n                } else {\n                return (\n                    this.props.people.map(person => (\n\n                        <Grid item sm={2}>\n                            <Card className={classes.card}>\n                                <CardActionArea>\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.name}>\n                                            {person.name}\n                                        </Typography>\n                                                          \n                                        <List style={{color: 'white'}}>\n              \n                                                <ListItem>\n                                                    <ListItemText>Birth Year: {person.birth_year}</ListItemText>\n                                                </ListItem>\n            \n                                                <ListItem>\n                                                    <ListItemText>Gender: {person.gender}</ListItemText>\n                                                </ListItem>\n            \n                                                <ListItem>\n                                                    <ListItemText>Eye Color: {person.eye_color}</ListItemText>\n                                                </ListItem>\n            \n                                                <ListItem>\n                                                    <ListItemText>Skin Color: {person.skin_color}</ListItemText>\n                                                </ListItem>\n            \n                                                <CardActions>\n                                                    <Button size=\"small\" style={{color: '#FFE81F'}}>\n                                                    Know More\n                                                    </Button>\n                                                </CardActions>\n            \n                                        </List>\n                                    </CardContent>\n                                </CardActionArea>\n                                    \n                                    \n                            </Card>\n                        </Grid>\n                        ))\n                )\n                }\n            })()}\n            \n            \n            </Grid>\n            </div>\n        )\n    }\n}\n\nPerson.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Person);"]},"metadata":{},"sourceType":"module"}