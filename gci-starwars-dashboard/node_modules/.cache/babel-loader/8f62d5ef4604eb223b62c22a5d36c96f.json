{"ast":null,"code":"var _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Person.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n  card: {\n    margin: '10px',\n    color: '#FFE81F',\n    backgroundColor: 'black'\n  },\n  name: {\n    borderBottom: '2px white'\n  },\n  root: {\n    color: '#FFE81F'\n  },\n  table: {\n    backgroundColor: 'black',\n    color: '#FFE81F'\n  },\n  loading: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n  thead: {\n    textAlign: 'center',\n    color: '#FFE81F'\n  }\n});\n\nexport class Person extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: classes.thead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Birth Year\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Eye color\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Skin Color\"), React.createElement(TableCell, {\n      className: classes.thead,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"More Details\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, (() => {\n      if (this.props.people == null) {\n        return React.createElement(\"h1\", {\n          className: classes.loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Loading\");\n      } else {\n        return this.props.people.map(person => React.createElement(TableRow, {\n          row: person.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, person.name), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, person.gender), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, person.birth_year), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, person.eye_color), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, person.skin_color), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Know More\"))));\n      }\n    })()))));\n  }\n\n}\nPerson.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Person);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Person.js"],"names":["React","Component","PropTypes","withStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","Grid","List","ListItem","ListItemText","Table","TableBody","TableCell","TableHead","TableRow","Paper","styles","theme","card","margin","color","backgroundColor","name","borderBottom","root","table","loading","flexGrow","textAlign","thead","Person","constructor","props","render","classes","people","map","person","gender","birth_year","eye_color","skin_color","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme=> ({\n    card:{\n        margin: '10px',\n        color: '#FFE81F',\n        backgroundColor: 'black'\n    },\n    name:{\n\n        borderBottom: '2px white'\n    },\n    root:{\n        color: '#FFE81F'\n    },\n    table:{\n        backgroundColor:'black',\n        color: '#FFE81F'\n    },\n    loading:{\n        flexGrow: 1,\n        textAlign:\"center\",\n        \n    },\n    thead: {\n        textAlign:'center',\n        color:'#FFE81F'\n    }\n\n});\n\n\nexport class Person extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n\n        let { classes } = this.props;\n        \n        return (\n            <div>\n        \n                        <Paper className={classes.root}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                            \n                                <TableHead>\n                                    <TableRow style={{color:'white'}}>\n                                        <TableCell className={classes.thead}>Name</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Birth Year</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Gender</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Eye color</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">Skin Color</TableCell>\n                                        <TableCell className={classes.thead} align=\"right\">More Details</TableCell>\n                                    </TableRow>\n                                </TableHead>\n\n                                <TableBody>\n                                    {(() => {\n                                        if(this.props.people == null){\n                                            return (\n                                                <h1 className={classes.loading}>Loading</h1>\n                                            )\n                                        }else{\n                                            return(\n                                                this.props.people.map(person => (\n                                                <TableRow row={person.name}>\n                                                    <TableCell component=\"th\" scope=\"row\">{person.name}</TableCell>\n                                                    <TableCell align=\"right\">{person.gender}</TableCell>\n                                                    <TableCell align=\"right\">{person.birth_year}</TableCell>\n                                                    <TableCell align=\"right\">{person.eye_color}</TableCell>\n                                                    <TableCell align=\"right\">{person.skin_color}</TableCell>\n                                                    <TableCell align=\"right\"><Button>Know More</Button></TableCell>\n                                                </TableRow>\n                                                ))\n                                                )\n                                                }\n                                            })()}\n                                </TableBody>\n\n                            </Table>\n                        </Paper>\n            \n            </div>\n        )\n    }\n}\n\nPerson.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Person);"]},"metadata":{},"sourceType":"module"}