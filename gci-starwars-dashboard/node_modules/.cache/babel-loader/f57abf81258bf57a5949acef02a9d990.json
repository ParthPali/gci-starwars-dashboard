{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getFilm(id: 1){\\n            title\\n            \\n        }\\n        getEveryPerson{\\n            count\\n            results{\\n                name\\n            }\\n        }\\n\\n        \\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nconst all = gql(_templateObject());\nexport class Home extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Query, {\n      query: all,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Loading ....\");\n      if (error) console.log(error);\n      console.log(data);\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\nexport default Home;","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js"],"names":["React","Component","gql","Query","all","Home","render","loading","error","data","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,MAAMC,GAAG,GAAGF,GAAH,mBAAT;AAiBA,OAAO,MAAMG,IAAN,SAAmBJ,SAAnB,CAA6B;AAChCK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC;AAACG,MAAAA,OAAD;AAASC,MAAAA,KAAT;AAAeC,MAAAA;AAAf,KAAD,KAAyB;AACrB,UAAGF,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACZ,UAAGC,KAAH,EAAUE,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KART,CADJ,CADJ;AAeH;;AAjB+B;AAoBpC,eAAeJ,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nconst all = gql`\n    query{\n        \n        getFilm(id: 1){\n            title\n            \n        }\n        getEveryPerson{\n            count\n            results{\n                name\n            }\n        }\n\n        \n    }\n`;\nexport class Home extends Component {\n    render() {\n        return (\n            <div>\n                <Query query={all}>\n                    {\n                        ({loading,error,data}) =>{\n                            if(loading) return <h2>Loading ....</h2>\n                            if(error) console.log(error)\n                            console.log(data)\n\n                            return <h1></h1>\n                        }\n                    }\n                </Query>\n            </div>\n        )\n    }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}