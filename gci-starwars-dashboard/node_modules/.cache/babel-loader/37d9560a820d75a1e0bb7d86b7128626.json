{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryPlanet(page: \", \"){\\n\\n            results{\\n                name\\n                population\\n                gravity\\n                climate\\n                created\\n            }\\n        }\\n\\n        \\n    }\\n    \"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        getEveryFilm{\\n            count\\n            results{\\n                episode_id\\n                title\\n                director\\n                release_date\\n                created\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query{\\n        \\n        getEveryPerson(page: \", \"){\\n\\n            results{\\n                name\\n                gender\\n                skin_color\\n                birth_year\\n                eye_color\\n\\n            }\\n        }\\n\\n        \\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport Film from './Film.js';\nimport Planet from './Planet';\nimport { Grid } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql'\n});\n\nconst getPerson = pageNo => {\n  const all = gql(_templateObject(), pageNo);\n  return all;\n};\n\nconst getFilm = () => {\n  const all = gql(_templateObject2());\n  return all;\n};\n\nconst getPlanet = pageNo => {\n  const all = gql(_templateObject3(), pageNo);\n  return all;\n};\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.QueryPeople = async pageNo => {\n      await client.query({\n        query: getPerson(pageNo)\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          people: data.getEveryPerson.results\n        });\n      });\n    };\n\n    this.QueryFilm = async () => {\n      await client.query({\n        query: getFilm()\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          film: data.getEveryFilm.results\n        });\n      });\n    };\n\n    this.QueryPlanet = async pageNo => {\n      await client.query({\n        query: getPlanet(pageNo)\n      }).then(result => {\n        const data = result.data;\n        this.setState({\n          planet: data.getEveryPlanet.results\n        });\n      });\n    };\n\n    this.state = {\n      people: null,\n      film: null,\n      planet: null\n    };\n  }\n\n  async setData(point, pageNo) {\n    if (point == 'person') {\n      await this.QueryPeople(pageNo);\n    }\n\n    if (point == 'planet') {\n      await this.QueryPlanet(pageNo);\n    }\n  }\n\n  async componentDidMount() {\n    await this.setData('person', 1);\n    await this.setData('planet', 1);\n    await this.QueryFilm();\n  }\n\n  render() {\n    const number = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.People,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"CHARACTERS\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Person, {\n      people: this.state.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"4\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"5\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"6\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"7\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 8),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"8\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('person', 9),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"9\"))))), React.createElement(\"div\", {\n      className: classes.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Films\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Film, {\n      film: this.state.film,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.People,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"PLANETS\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Planet, {\n      planet: this.state.planet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"4\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"5\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"6\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setData('planet', 7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"7\")))))));\n  }\n\n}\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst styles = theme => ({\n  poster: {\n    width: '100%',\n    height: '300px'\n  },\n  home: {\n    margin: '40px',\n    paddingTop: '100px'\n  },\n  title: {\n    padding: '15px',\n    color: '#FFE81F',\n    backgroundColor: 'black',\n    textAlign: 'center'\n  },\n  card: {\n    margin: '10px',\n    color: '#FFE81F',\n    backgroundColor: 'black'\n  },\n  name: {\n    borderBottom: '2px white'\n  }\n});\n\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["/home/sayamss/Desktop/my-codes/Google Code In/Jboss Community/StarsWars-Dashboard/gci-starwars-dashboard/src/components/Home.js"],"names":["React","Component","gql","Query","useQuery","PropTypes","withStyles","poster","Person","Film","Planet","Grid","useEffect","ApolloClient","ApolloProvider","Card","CardActionArea","CardActions","CardContent","Button","Typography","List","ListItem","ListItemText","client","uri","getPerson","pageNo","all","getFilm","getPlanet","Home","constructor","props","QueryPeople","query","then","result","data","setState","people","getEveryPerson","results","QueryFilm","film","getEveryFilm","QueryPlanet","planet","getEveryPlanet","state","setData","point","componentDidMount","render","number","classes","home","People","title","propTypes","object","isRequired","styles","theme","width","height","margin","paddingTop","padding","color","backgroundColor","textAlign","card","name","borderBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport poster from './poster.jpg';\nimport Person from './Person';\nimport Film from './Film.js';\nimport Planet from './Planet';\nimport { Grid } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:4000/graphql',\n  });\n\nconst getPerson = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryPerson(page: ${pageNo}){\n\n            results{\n                name\n                gender\n                skin_color\n                birth_year\n                eye_color\n\n            }\n        }\n\n        \n    }\n    `;\n\n    return all;\n    \n}\n\nconst getFilm = () =>{\n\n    const all = gql`\n    query{\n        getEveryFilm{\n            count\n            results{\n                episode_id\n                title\n                director\n                release_date\n                created\n            }\n        }\n    }\n    `;\n    return all;\n}\n\nconst getPlanet = (pageNo) =>{\n    \n    const all  = gql`\n    query{\n        \n        getEveryPlanet(page: ${pageNo}){\n\n            results{\n                name\n                population\n                gravity\n                climate\n                created\n            }\n        }\n\n        \n    }\n    `;\n\n    return all;\n    \n}\n\n\nexport class Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            people: null,\n            film: null,\n            planet: null,        \n        }\n    }\n\n    QueryPeople = async pageNo =>{\n        await client.query({\n                    query: getPerson(pageNo)\n                                })\n                                .then(result => {\n                                    const data = result.data\n                                    \n                                    this.setState({\n                                        people: data.getEveryPerson.results\n                                    })\n                                    \n                                });\n    }\n\n    QueryFilm = async () =>{\n        await client.query({\n                    query: getFilm()\n                                })\n                                .then(result => {\n                                    const data = result.data\n                                    this.setState({\n                                        film: data.getEveryFilm.results\n                                    })\n                                });\n    }\n\n    QueryPlanet = async pageNo =>{\n        await client.query({\n                    query: getPlanet(pageNo)\n                                })\n                                .then(result => {\n                                    const data = result.data\n                                    \n                                    this.setState({\n                                        planet: data.getEveryPlanet.results\n                                    })\n                                    \n                                });\n    }\n\n    async setData(point,pageNo){\n        if(point == 'person'){\n            await this.QueryPeople(pageNo);\n        }\n        if(point == 'planet'){\n            await this.QueryPlanet(pageNo);\n        }\n    \n        \n    }\n    async componentDidMount(){\n        await this.setData('person',1);\n        await this.setData('planet',1);\n        \n        await this.QueryFilm();\n        \n    }\n    \n    render() {\n\n        const number = [1,2,3,4,5,6,7,8,9];\n        let { classes } = this.props;\n\n        return (\n\n            \n            <div className={classes.home}>\n            <ApolloProvider client={client}>\n                <div className={classes.People}>\n\n                    <h1 className={classes.title}>CHARACTERS</h1>\n                    <Grid container>\n                        <Person people={this.state.people} />\n                        <ul>\n                            <li><Button onClick={() => this.setData('person',1)}>1</Button></li>\n                            <li><Button onClick={() => this.setData('person',2)}>2</Button></li>\n                            <li><Button onClick={() => this.setData('person',3)}>3</Button></li>\n                            <li><Button onClick={() => this.setData('person',4)}>4</Button></li>\n                            <li><Button onClick={() => this.setData('person',5)}>5</Button></li>\n                            <li><Button onClick={() => this.setData('person',6)}>6</Button></li>\n                            <li><Button onClick={() => this.setData('person',7)}>7</Button></li>\n                            <li><Button onClick={() => this.setData('person',8)}>8</Button></li>\n                            <li><Button onClick={() => this.setData('person',9)}>9</Button></li>\n                        </ul>\n                        \n                    </Grid>\n\n                </div>\n\n                <div className={classes.people}>\n                    <h1 className={classes.title}>Films</h1>\n\n                    <Grid container>\n                        <Film film={this.state.film} />\n                    </Grid>\n                </div>\n\n                <div className={classes.People}>\n\n                    <h1 className={classes.title}>PLANETS</h1>\n                    <Grid container>\n                        <Planet planet={this.state.planet} />\n                        <ul>\n                            <li><Button onClick={() => this.setData('planet',1)}>1</Button></li>\n                            <li><Button onClick={() => this.setData('planet',2)}>2</Button></li>\n                            <li><Button onClick={() => this.setData('planet',3)}>3</Button></li>\n                            <li><Button onClick={() => this.setData('planet',4)}>4</Button></li>\n                            <li><Button onClick={() => this.setData('planet',5)}>5</Button></li>\n                            <li><Button onClick={() => this.setData('planet',6)}>6</Button></li>\n                            <li><Button onClick={() => this.setData('planet',7)}>7</Button></li>\n                        </ul>\n                        \n                    </Grid>\n\n                </div>\n                </ApolloProvider>\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme=> ({\n    \n    poster:{\n        width: '100%',\n        height: '300px'\n    },\n    home:{\n        margin: '40px',\n        paddingTop: '100px',\n    },\n    title:{\n        \n        padding: '15px',\n        color: '#FFE81F',\n        \n        backgroundColor: 'black',\n        textAlign: 'center'\n    },\n    card:{\n        margin: '10px',\n        color: '#FFE81F',\n        backgroundColor: 'black'\n    },\n    name:{\n\n        borderBottom: '2px white'\n    }\n})\n\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}